environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      PYWIN_DL: "https://downloads.sourceforge.net/project/pywin32/pywin32/Build%20219/pywin32-219.win32-py2.7.exe"
      WXP: "http://wxpython.org/Phoenix/snapshot-builds/wxPython_Phoenix-3.0.3.dev1830+0b5f910-cp27-none-win32.whl"
    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      PYWIN_DL: "https://downloads.sourceforge.net/project/pywin32/pywin32/Build%20219/pywin32-219.win-amd64-py2.7.exe"
      WXP: "http://wxpython.org/Phoenix/snapshot-builds/wxPython_Phoenix-3.0.3.dev1830+0b5f910-cp27-none-win_amd64.whl"


install:

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

# Install pywin32 & pyinstaller
  - 'ECHO Downloading %PYWIN_DL%'
  - ps: (new-object net.webclient).DownloadFile("$env:PYWIN_DL", 'C:/pywin_inst.exe')
  - "%PYTHON%/Scripts/easy_install.exe C:/pywin_inst.exe"
  - "%WITH_COMPILER% pip install git+git://github.com/pyinstaller/pyinstaller.git"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture

  #- "appveyor DownloadFile http://downloads.sourceforge.net//project//pywin32//pywin32//Build0219//pywin32-219.win-amd64-py2.7.exe -FileName pywin.exe"                           
  #- pywin.exe 

  - "%CMD_IN_ENV% pip install --upgrade --trusted-host wxpython.org --pre -vv %WXP%"
  #- appveyor DownloadFile %WXP% -FileName wxpython.exe
  #- "%CMD_IN_ENV% C:/wxpython.exe /sp- /verysilent /norestart /SUPPRESSMSGBOXES"
  - "%CMD_IN_ENV% python -c \"import wx; print(wx.__version__)\""
  #- "%CMD_IN_ENV% pip install pyinstaller"
  #- "%CMD_IN_ENV% pip install -e ."
  - "%CMD_IN_ENV% python setup.py version"
  - "%CMD_IN_ENV% python setup.py build"
  - ps: Copy-Item calc.ico build\lib\seguid_calculator
  - ps: cd build//lib//seguid_calculator
  - ps: ls

build: false  # Not a C# project, build stuff at the test step instead.

matrix:
  fast_finish: true

test_script: true
  # Build the compiled extension and run the project tests
  #- "%CMD_IN_ENV% pip install nose"
  #- "%CMD_IN_ENV% pip install pyreadline"
  #- "%CMD_IN_ENV% python run_tests.py"


after_test:
  # If tests are successful, create a whl package for the project.
  #- "%CMD_IN_ENV% pip install wheel"
  #- "%CMD_IN_ENV% python setup.py bdist_wheel bdist_wininst"

  - pyinstaller --noconsole --icon=calc.ico --onefile seguid.py --name seguid_calculator

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: build\lib\seguid_calculator\dist\*
  #- path: dist\*

